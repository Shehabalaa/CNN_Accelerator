LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;
USE work.Utiles.ALL;

ENTITY Alu8x16 IS
    GENERIC (n :INTEGER := 1);
    PORT (
        q :IN genericArrayofVector8bit(n-1 downto 0);
        m :IN genericArrayofVector16bit(n-1 downto 0); 
        f :INOUT genericArrayofVector16bit(n-1 downto 0);
        clk,start,rst :IN STD_LOGIC;
        done :INOUT STD_LOGIC; 
        working :OUT STD_LOGIC
    );
END Alu8x16;

ARCHITECTURE Alu8x16Arch OF Alu8x16 IS
SIGNAL aluOut: genericArrayofVector16bit(n-1 downto 0);
SIGNAL save,firstTime : STD_LOGIC;
BEGIN
    gen: FOR i IN n-1 DOWNTO 0  GENERATE
    BEGIN
        cmp1: ENTITY work.nMul8x16 GENERIC MAP(n) PORT MAP (q(i),m(i),aluOut(i),clk,start,rst,working,done);
        cmp2: ENTITY work.Accumulator GENERIC MAP(n) PORT MAP (aluOut(i),f,save,rst,'1');
    END GENERATE;
    firtStartLachCmp : ENTITY work.Reg GENERIC MAP(1) PORT MAP(D(0) => '1',en => '1',clk => working,rst => rst, Q(0) => firstTime);
    save <= firstTime AND working;
END Alu8x16Arch; 
